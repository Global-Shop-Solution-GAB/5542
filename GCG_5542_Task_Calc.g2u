Program.Sub.Preflight.Start
v.Global.sBOM.Declare
v.Global.fRM_Cost.Declare
v.Global.fLot_Cost.Declare
v.Global.fLot_Factor.Declare

v.Global.fLot_1MO.Declare
v.Global.fLot_6MO.Declare
v.Global.fLot_13MO.Declare

v.Global.fVar_1MO.Declare
v.Global.fVar_6MO.Declare
v.Global.fVar_13MO.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
f.Intrinsic.Control.Try
	f.Intrinsic.Control.CallSub(checkCustomFolder)
	f.Intrinsic.Control.CallSub(createEmptyDT)	
	f.Intrinsic.Control.CallSub(createDictionary)
	f.Intrinsic.Control.CallSub(getAllBomParent)
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.ErrorMsg.Start
v.Local.sError.Declare

'Closes ODBC connection, default to connection : "con"
f.Intrinsic.Control.If(v.ODBC!con.State, =, 1)
	f.ODBC.Connection!con.Close
f.Intrinsic.Control.EndIf

'Generic Error message.
f.Intrinsic.String.Build("Project ProjectName.g2u {0}{0}Subroutine: {1}{0}Error: {2} with Description: {3}", v.Ambient.NewLine, v.Args.CurrentSub, v.Ambient.ErrorNumber, v.Ambient.ErrorDescription, v.Local.sError)
f.Intrinsic.UI.Msgbox(v.Local.sError)
Program.Sub.ErrorMsg.End

Program.Sub.checkCustomFolder.Start
v.Local.sFolder.Declare
v.Local.bExists.Declare
f.Intrinsic.Control.Try
	f.Intrinsic.String.Build("{0}\CUSTOM\GCG_5542\", v.Caller.GlobalDir, v.Local.sFolder)
	f.Intrinsic.File.DirExists(v.Local.sFolder, v.Local.bExists)
	f.Intrinsic.Control.If(v.Local.bExists.Not)
		f.Intrinsic.File.CreateDir(v.Local.sFolder)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Build("{0}\CUSTOM\GCG_5542\GCG_5542_PL.txt", v.Caller.GlobalDir, v.Local.sFolder)
	f.Intrinsic.File.Exists(v.Local.sFolder, v.Local.bExists)
	f.Intrinsic.Control.If(v.Local.bExists.Not)
		f.Intrinsic.File.String2File(v.Local.sFolder, "'01','02','03','04','05','06','07'")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.checkCustomFolder.End

Program.Sub.createEmptyDT.Start
f.Intrinsic.Control.Try
	f.Intrinsic.Control.If(v.DataTable.RM_CostDT.Exists)
		f.Data.DataTable.Close("RM_CostDT")
	f.Intrinsic.Control.EndIf	
	f.Data.DataTable.Create("RM_CostDT", true)
	f.Data.DataTable.AddColumn("RM_CostDT", "Part", "String")
	f.Data.DataTable.AddColumn("RM_CostDT", "QTY", "Float")
	f.Data.DataTable.AddColumn("RM_CostDT", "UnitCost", "Float")
	f.Data.DataTable.AddExpressionColumn("RM_CostDT", "TotalCost", "Float", "QTY*UnitCost")
	
	f.Intrinsic.Control.If(v.DataTable.Lot_CostDT.Exists)
		f.Data.DataTable.Close("Lot_CostDT")
	f.Intrinsic.Control.EndIf	
	f.Data.DataTable.Create("Lot_CostDT", true)
	f.Data.DataTable.AddColumn("Lot_CostDT", "Part", "String")
	f.Data.DataTable.AddColumn("Lot_CostDT", "QTY", "Float")
	f.Data.DataTable.AddColumn("Lot_CostDT", "UnitCost", "Float")
	f.Data.DataTable.AddExpressionColumn("Lot_CostDT", "TotalCost", "Float", "QTY*UnitCost")
	f.Intrinsic.Control.If(v.DataTable.saveDT.Exists)
		f.Data.DataTable.Close("saveDT")
	f.Intrinsic.Control.EndIf	
	f.Data.DataTable.Create("saveDT", true)
	f.Data.DataTable.AddColumn("saveDT", "BomParent", "String")
	f.Data.DataTable.AddColumn("saveDT", "PL", "String")
	f.Data.DataTable.AddColumn("saveDT", "RmCost", "Float")
	f.Data.DataTable.AddColumn("saveDT", "LotCost", "Float")
	f.Data.DataTable.AddColumn("saveDT", "LotFactor", "Float")
	f.Data.DataTable.AddExpressionColumn("saveDT", "TotalCost", "Float", "RmCost+LotCost+LotFactor")
	f.Data.DataTable.AddColumn("saveDT", "Lot_1MO", "Float")
	f.Data.DataTable.AddColumn("saveDT", "Var_1MO", "Float")
	f.Data.DataTable.AddExpressionColumn("saveDT", "Per_1MO", "Float", "Var_1MO/TotalCost")
	f.Data.DataTable.AddColumn("saveDT", "Lot_6MO", "Float")
	f.Data.DataTable.AddColumn("saveDT", "Var_6MO", "Float")
	f.Data.DataTable.AddExpressionColumn("saveDT", "Per_6MO", "Float", "Var_6MO/TotalCost")
	f.Data.DataTable.AddColumn("saveDT", "Lot_13MO", "Float")
	f.Data.DataTable.AddColumn("saveDT", "Var_13MO", "Float")
	f.Data.DataTable.AddExpressionColumn("saveDT", "Per_13MO", "Float", "Var_13MO/TotalCost")
	
	f.Data.DataTable.SetValueFormat("saveDT", -1, "Lot_1MO", "Lot_1MO", "0.00")
	f.Data.DataTable.SetValueFormat("saveDT", -1, "Lot_6MO", "Lot_6MO", "0.00")
	f.Data.DataTable.SetValueFormat("saveDT", -1, "Lot_13MO", "Lot_13MO", "0.00")
	
	f.Data.DataTable.SetValueFormat("saveDT", -1, "Var_1MO", "Var_1MO", "0.00")
	f.Data.DataTable.SetValueFormat("saveDT", -1, "Var_6MO", "Var_6MO", "0.00")
	f.Data.DataTable.SetValueFormat("saveDT", -1, "Var_13MO", "Var_13MO", "0.00")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.createEmptyDT.End

Program.Sub.createDictionary.Start
f.Intrinsic.Control.Try
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Data.Dictionary.CreateFromSQL("productLineDict", "con", "Select Part, Product_Line from V_Inventory_Mstr")
		f.Data.Dictionary.SetDefaultReturn("productLineDict", "")
	f.ODBC.Connection!con.Close
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.createDictionary.End

Program.Sub.getAllBomParent.Start
v.Local.sText.Declare
v.Local.sFilePath.Declare
v.Local.bExists.Declare
v.Local.sSQL.Declare
v.Local.iCnt.Declare
f.Intrinsic.Control.Try
	f.Intrinsic.String.Build("{0}\CUSTOM\GCG_5542\GCG_5542_PL.txt", v.Caller.GlobalDir, v.Local.sFilePath)
	f.Intrinsic.File.Exists(v.Local.sFilePath, v.Local.bExists)
	f.Intrinsic.Control.If(v.Local.bExists)
		f.Intrinsic.File.File2String(v.Local.sFilePath, v.Local.sText)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Build("select distinct Parent from BOM_Mstr where Parent in (Select Part from V_Inventory_mstr where Product_Line in ({0}))", v.Local.sText.Trim, v.Local.sSQL)
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Data.DataTable.CreateFromSQL("parentsBomDT", "con", v.Local.sSQL)
	f.ODBC.Connection!con.Close
	
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataTable.parentsBomDT.RowCount--, 1)
		v.Global.sBOM.Set(v.DataTable.parentsBomDT(v.Local.iCnt).Parent!FieldVal)
		f.Intrinsic.Control.CallSub(getBomParent)
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	f.Intrinsic.Control.CallSub(saveToDB)
	
	f.Intrinsic.String.Build("{0}\CUSTOM\GCG_5542\GCG_5542_Date.txt", v.Caller.GlobalDir, v.Local.sFilePath)
	f.Intrinsic.File.Exists(v.Local.sFilePath, v.Local.bExists)
	f.Intrinsic.Control.If(v.Local.bExists)
		f.Intrinsic.File.DeleteFile(v.Local.sFilePath)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.String.Build("{0}	{1}", v.Ambient.Date.String, v.Ambient.Time, v.Local.sText)
	f.Intrinsic.File.String2File(v.Local.sFilePath, v.Local.sText)
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.getAllBomParent.End

Program.Sub.getBomParent.Start
v.Local.sSQL.Declare
v.Local.iCnt.Declare
v.Local.sCurrentPart.Declare
v.Local.sPL.Declare
v.Local.fCurrentQty.Declare
v.Local.fCurrentCost.Declare
f.Intrinsic.Control.Try

	f.Intrinsic.String.Build("Select Parent, Sequence_Bom, Cost, Quantity, Part, Part as PL from V_BOM_MSTR where Parent  =  '{0}' and Sequence_Bom <> '0000' order by Parent, Sequence_BOM", v.Global.sBOM, v.Local.sSQL)
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Data.DataTable.CreateFromSQL("bomLevel_1DT", "con", v.Local.sSQL)
		f.Data.DataTable.FillFromDictionary("bomLevel_1DT", "productLineDict", "PL")
	f.ODBC.Connection!con.Close
	
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataTable.bomLevel_1DT.RowCount--, 1)
		v.Local.sCurrentPart.Set(v.DataTable.bomLevel_1DT(v.Local.iCnt).Part!FieldVal)
		v.Local.sPL.Set(v.DataTable.bomLevel_1DT(v.Local.iCnt).PL!FieldVal)
		v.Local.fCurrentQty.Set(v.DataTable.bomLevel_1DT(v.Local.iCnt).Quantity!FieldVal)
		v.Local.fCurrentCost.Set(v.DataTable.bomLevel_1DT(v.Local.iCnt).Cost!FieldVal)
		
		f.Intrinsic.String.Build("Select Parent, Sequence_Bom, Cost, Quantity, Part, Part as PL from V_BOM_MSTR where Parent  =  '{0}' and Sequence_Bom <> '0000' order by Parent, Sequence_BOM", v.Local.sCurrentPart, v.Local.sSQL)
		f.ODBC.Connection!con.OpenCompanyConnection
			f.Data.DataTable.CreateFromSQL("bomChildDT", "con", v.Local.sSQL)
		f.ODBC.Connection!con.Close
		
		f.Intrinsic.Control.If(v.DataTable.bomChildDT.RowCount, >, 0)
			f.Intrinsic.Control.CallSub(getBomChild, "passedQTY", v.Local.fCurrentQty, "passedBom", v.Local.sCurrentPart)
			
		f.Intrinsic.Control.Else
			f.Intrinsic.Control.If(v.Local.sPL.Trim, =, "RM")
				f.Data.DataTable.AddRow("RM_CostDT", "Part", v.Local.sCurrentPart, "QTY", v.Local.fCurrentQty, "UnitCost", v.Local.fCurrentCost)
			f.Intrinsic.Control.EndIf
			
			f.Intrinsic.Control.If(v.Local.sPL.Trim, =, "ZL")
				f.Data.DataTable.AddRow("Lot_CostDT", "Part", v.Local.sCurrentPart, "QTY", v.Local.fCurrentQty, "UnitCost", v.Local.fCurrentCost)
			f.Intrinsic.Control.EndIf
			
			f.Intrinsic.Control.If(v.Local.sPL.Trim, =, "ZK")
				f.Intrinsic.Math.Mult(v.Local.fCurrentQty, v.Local.fCurrentCost, v.Global.fLot_Factor)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		
			f.Data.DataTable.Close("bomChildDT")
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	f.Intrinsic.Control.CallSub(calculateValues)
	f.Data.DataTable.Close("bomLevel_1DT")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.getBomParent.End

Program.Sub.getBomChild.Start
v.Local.sSQL.Declare
v.Local.iCnt.Declare
v.Local.sCurrentPart.Declare
v.Local.sPL.Declare
v.Local.fCurrentQty.Declare
v.Local.fCurrentCost.Declare
f.Intrinsic.Control.Try
	f.Intrinsic.String.Build("Select Parent, Sequence_Bom, Cost, Quantity, Part, Part as PL from V_BOM_MSTR where Parent  =  '{0}' and Sequence_Bom <> '0000' order by Parent, Sequence_BOM", v.Args.passedBom, v.Local.sSQL)
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Data.DataTable.CreateFromSQL("subParentDT", "con", v.Local.sSQL)
		'f.Data.Dictionary.CreateFromSQL("productLineDict", "con", "Select Part, Product_Line from V_Inventory_Mstr")
		'f.Data.Dictionary.SetDefaultReturn("productLineDict", "")
		f.Data.DataTable.FillFromDictionary("subParentDT", "productLineDict", "PL")
		'f.Data.Dictionary.Close("productLineDict")
	f.ODBC.Connection!con.Close
	
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataTable.subParentDT.RowCount--, 1)
		v.Local.sCurrentPart.Set(v.DataTable.subParentDT(v.Local.iCnt).Part!FieldVal)
		v.Local.sPL.Set(v.DataTable.subParentDT(v.Local.iCnt).PL!FieldVal)
		v.Local.fCurrentQty.Set(v.DataTable.subParentDT(v.Local.iCnt).Quantity!FieldVal)
		v.Local.fCurrentCost.Set(v.DataTable.subParentDT(v.Local.iCnt).Cost!FieldVal)
		f.Intrinsic.Math.Mult(v.Local.fCurrentQty, v.Args.passedQTY, v.Local.fCurrentQTY)
		
		f.Intrinsic.String.Build("Select Parent, Sequence_Bom, Cost, Quantity, Part, Part as PL from V_BOM_MSTR where Parent  =  '{0}' and Sequence_Bom <> '0000' order by Parent, Sequence_BOM", v.Local.sCurrentPart, v.Local.sSQL)
		f.ODBC.Connection!con.OpenCompanyConnection
			f.Data.DataTable.CreateFromSQL("bomChildDT", "con", v.Local.sSQL)
		f.ODBC.Connection!con.Close
		
		f.Intrinsic.Control.If(v.DataTable.bomChildDT.RowCount, >, 0)
			f.Intrinsic.Control.CallSub(getBomChild, "passedQTY", v.Local.fCurrentQty, "passedBom", v.Local.sCurrentPart)
		f.Intrinsic.Control.Else
			f.Intrinsic.Control.If(v.Local.sPL.Trim, =, "RM")
				f.Data.DataTable.AddRow("RM_CostDT", "Part", v.Local.sCurrentPart, "QTY", v.Local.fCurrentQty, "UnitCost", v.Local.fCurrentCost)
			f.Intrinsic.Control.EndIf
			
			f.Intrinsic.Control.If(v.Local.sPL.Trim, =, "ZL")
				f.Data.DataTable.AddRow("Lot_CostDT", "Part", v.Local.sCurrentPart, "QTY", v.Local.fCurrentQty, "UnitCost", v.Local.fCurrentCost)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		
			f.Data.DataTable.Close("bomChildDT")
	f.Intrinsic.Control.Next(v.Local.iCnt)
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.getBomChild.End

Program.Sub.calculateValues.Start
v.Local.fTemp.Declare

f.Intrinsic.Control.Try
	f.Data.DataTable.Compute("RM_CostDT", "SUM(TotalCost)", "", v.Global.fRM_Cost)
	f.Data.DataTable.Compute("Lot_CostDT", "SUM(TotalCost)", "", v.Global.fLot_Cost)
	
	f.Intrinsic.Math.Mult(v.Global.fRM_Cost, 0.01, v.Local.fTemp)
	f.Intrinsic.Math.Sub(v.Local.fTemp, v.Global.fLot_Cost, v.Global.fLot_1MO)
	f.Intrinsic.Math.Sub(v.Global.fLot_Factor, v.Global.fLot_1MO, v.Global.fVar_1MO)
	
	f.Intrinsic.Math.Mult(v.Global.fRM_Cost, 0.06, v.Local.fTemp)
	f.Intrinsic.Math.Sub(v.Local.fTemp, v.Global.fLot_Cost, v.Global.fLot_6MO)
	f.Intrinsic.Math.Sub(v.Global.fLot_Factor, v.Global.fLot_6MO, v.Global.fVar_6MO)
	
	f.Intrinsic.Math.Mult(v.Global.fRM_Cost, 0.13, v.Local.fTemp)
	f.Intrinsic.Math.Sub(v.Local.fTemp, v.Global.fLot_Cost, v.Global.fLot_13MO)
	f.Intrinsic.Math.Sub(v.Global.fLot_Factor, v.Global.fLot_13MO, v.Global.fVar_13MO)
	
	f.Data.DataTable.AddRow("saveDT", "BomParent", v.Global.sBOM, "RmCost", v.Global.fRM_Cost, "LotCost", v.Global.fLot_Cost, "LotFactor", v.Global.fLot_Factor, "Lot_1MO", v.Global.fLot_1MO, "Lot_6MO", v.Global.fLot_6MO, "Lot_13MO", v.Global.fLot_13MO, "Var_1MO", v.Global.fVar_1MO, "Var_6MO", v.Global.fVar_6MO, "Var_13MO", v.Global.fVar_13MO)
	f.Data.DataTable.FillFromDictionary("saveDT", "productLineDict", "PL")
	
	f.Data.DataTable.DeleteRow("RM_CostDT")
	f.Data.DataTable.DeleteRow("Lot_CostDT")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.calculateValues.End

Program.Sub.saveToDB.Start
f.Intrinsic.Control.Try
	f.Data.DataTable.FillFromDictionary("saveDT", "productLineDict", "BomParent", "PL")
	
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Data.DataTable.SaveToDB("saveDT", "con", "GCG_5542_BOM_CALC", "BomParent", 256)
	f.ODBC.Connection!con.Close
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.saveToDB.End